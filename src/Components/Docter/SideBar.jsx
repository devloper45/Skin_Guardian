import React, { useState } from "react";
import { useNavigate, NavLink, useLocation } from "react-router-dom";
import logo from "../../assets/logo.png";

export default function SideBar({ openBar, setOpenBar }) {
  const isAcctive = (path) => location.pathname === path;
  const location = useLocation(); // Make sure you're using `useLocation`

  const navStyle = ({ isActive }) => ({
    fill: isActive ? "white" : "black", // Dynamically change the fill color
  });

  const sidebarrData = [
    {
      id: 1,
      title: "Dashboard",
      path: "/DocterDashboard",
      icon: (
        <svg
          width="24"
          height="25"
          viewBox="0 0 24 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M7 11.0547H5C2.58 11.0547 1.25 9.72469 1.25 7.30469V5.30469C1.25 2.88469 2.58 1.55469 5 1.55469H7C9.42 1.55469 10.75 2.88469 10.75 5.30469V7.30469C10.75 9.72469 9.42 11.0547 7 11.0547ZM5 3.05469C3.42 3.05469 2.75 3.72469 2.75 5.30469V7.30469C2.75 8.88469 3.42 9.55469 5 9.55469H7C8.58 9.55469 9.25 8.88469 9.25 7.30469V5.30469C9.25 3.72469 8.58 3.05469 7 3.05469H5Z"
            style={navStyle({ isActive: location.pathname === "/Dashboard" })}
          />
          <path
            d="M19 11.0547H17C14.58 11.0547 13.25 9.72469 13.25 7.30469V5.30469C13.25 2.88469 14.58 1.55469 17 1.55469H19C21.42 1.55469 22.75 2.88469 22.75 5.30469V7.30469C22.75 9.72469 21.42 11.0547 19 11.0547ZM17 3.05469C15.42 3.05469 14.75 3.72469 14.75 5.30469V7.30469C14.75 8.88469 15.42 9.55469 17 9.55469H19C20.58 9.55469 21.25 8.88469 21.25 7.30469V5.30469C21.25 3.72469 20.58 3.05469 19 3.05469H17Z"
            style={navStyle({ isActive: location.pathname === "/Dashboard" })}
          />
          <path
            d="M19 23.0547H17C14.58 23.0547 13.25 21.7247 13.25 19.3047V17.3047C13.25 14.8847 14.58 13.5547 17 13.5547H19C21.42 13.5547 22.75 14.8847 22.75 17.3047V19.3047C22.75 21.7247 21.42 23.0547 19 23.0547ZM17 15.0547C15.42 15.0547 14.75 15.7247 14.75 17.3047V19.3047C14.75 20.8847 15.42 21.5547 17 21.5547H19C20.58 21.5547 21.25 20.8847 21.25 19.3047V17.3047C21.25 15.7247 20.58 15.0547 19 15.0547H17Z"
            style={navStyle({ isActive: location.pathname === "/Dashboard" })}
          />
          <path
            d="M7 23.0547H5C2.58 23.0547 1.25 21.7247 1.25 19.3047V17.3047C1.25 14.8847 2.58 13.5547 5 13.5547H7C9.42 13.5547 10.75 14.8847 10.75 17.3047V19.3047C10.75 21.7247 9.42 23.0547 7 23.0547ZM5 15.0547C3.42 15.0547 2.75 15.7247 2.75 17.3047V19.3047C2.75 20.8847 3.42 21.5547 5 21.5547H7C8.58 21.5547 9.25 20.8847 9.25 19.3047V17.3047C9.25 15.7247 8.58 15.0547 7 15.0547H5Z"
            style={navStyle({ isActive: location.pathname === "/Dashboard" })}
          />
        </svg>
      ),
    },
    // {
    //   id: 2,
    //   title: "View Profile",
    //   path: "/DoctorProfile",
    //   icon: (
    //     <svg
    //       width="24"
    //       height="24"
    //       viewBox="0 0 24 24"
    //       fill="none"
    //       xmlns="http://www.w3.org/2000/svg"
    //     >
    //       <path
    //         d="M18.32 12.75H15C12.51 12.75 11.25 11.34 11.25 8.54996V5.67996C11.25 4.65996 11.37 3.19996 12.43 2.39996C13.32 1.73996 14.6 1.68996 16.49 2.23996C18.97 2.95996 21.04 5.02996 21.76 7.50996C22.31 9.38996 22.26 10.68 21.6 11.56C20.8 12.63 19.34 12.75 18.32 12.75ZM14.28 3.35996C13.87 3.35996 13.55 3.43996 13.34 3.59996C12.95 3.88996 12.76 4.56996 12.76 5.67996V8.55996C12.76 10.8 13.62 11.26 15.01 11.26H18.33C19.43 11.26 20.11 11.07 20.41 10.68C20.76 10.22 20.73 9.29996 20.34 7.94996C19.76 5.97996 18.06 4.26996 16.09 3.69996C15.35 3.46996 14.75 3.35996 14.28 3.35996Z"
    //         style={navStyle({
    //           isActive: location.pathname === "/Milestone",
    //         })}
    //       />
    //       <path
    //         d="M11.0699 22.7498C10.5399 22.7498 9.99988 22.7098 9.45988 22.6198C5.36988 21.9598 2.03988 18.6398 1.37988 14.5498C0.529883 9.28983 3.91988 4.32983 9.10988 3.26983C9.51988 3.18983 9.90988 3.44983 9.99988 3.84983C10.0799 4.25983 9.81988 4.64983 9.41988 4.73983C5.02988 5.63983 2.14988 9.83983 2.87988 14.3098C3.43988 17.7698 6.24988 20.5798 9.70988 21.1398C14.1999 21.8598 18.3899 18.9698 19.2799 14.5598C19.3599 14.1498 19.7599 13.8898 20.1599 13.9698C20.5699 14.0498 20.8299 14.4498 20.7499 14.8498C19.7999 19.5198 15.7199 22.7498 11.0699 22.7498Z"
    //         style={navStyle({
    //           isActive: location.pathname === "/Milestone",
    //         })}
    //       />
    //     </svg>
    //   ),
    // },
    // {
    //   id: 3,
    //   title: "ChatBot",
    //   path: "/chatBot",
    //   icon: (
    //     <svg
    //       width="24"
    //       height="25"
    //       viewBox="0 0 24 25"
    //       fill="none"
    //       xmlns="http://www.w3.org/2000/svg"
    //     >
    //       <path
    //         d="M17.8701 22.1764C17.5601 22.1764 17.2501 22.0964 16.9701 21.9264L12.9601 19.5464C12.5401 19.5364 12.1201 19.5064 11.7201 19.4464C11.4501 19.4064 11.2201 19.2264 11.1201 18.9664C11.0201 18.7064 11.0701 18.4264 11.2501 18.2164C11.9101 17.4464 12.2501 16.5264 12.2501 15.5464C12.2501 13.1264 10.1201 11.1564 7.50008 11.1564C6.52008 11.1564 5.58007 11.4264 4.79007 11.9464C4.57007 12.0864 4.30007 12.1064 4.06007 11.9964C3.83007 11.8864 3.66008 11.6664 3.63008 11.4064C3.60008 11.1264 3.58008 10.8464 3.58008 10.5564C3.58008 5.5964 7.88008 1.56641 13.1601 1.56641C18.4401 1.56641 22.7401 5.5964 22.7401 10.5564C22.7401 13.2764 21.4801 15.7764 19.2601 17.4864L19.6001 20.2064C19.6801 20.8864 19.3801 21.5264 18.8101 21.8964C18.5301 22.0764 18.2001 22.1764 17.8701 22.1764ZM13.1501 18.0364C13.2901 18.0264 13.4301 18.0664 13.5501 18.1464L17.7401 20.6364C17.8501 20.7064 17.9401 20.6764 18.0001 20.6364C18.0501 20.6064 18.1301 20.5264 18.1101 20.3864L17.7201 17.2264C17.6901 16.9464 17.8101 16.6764 18.0301 16.5164C20.0701 15.0864 21.2401 12.9064 21.2401 10.5364C21.2401 6.40638 17.6201 3.04639 13.1601 3.04639C8.87008 3.04639 5.35007 6.16643 5.09007 10.0864C5.84007 9.79643 6.65008 9.63641 7.49008 9.63641C10.9401 9.63641 13.7401 12.2764 13.7401 15.5264C13.7501 16.4064 13.5401 17.2564 13.1501 18.0364Z"
    //         style={navStyle({ isActive: location.pathname === "/chat" })}
    //       />
    //       <path
    //         d="M4.57977 23.0545C4.31977 23.0545 4.06977 22.9845 3.83977 22.8345C3.38977 22.5445 3.14978 22.0445 3.20978 21.5145L3.40977 19.9745C2.05977 18.8745 1.25977 17.2445 1.25977 15.5345C1.25977 13.5845 2.27978 11.7645 3.98978 10.6745C5.01978 10.0045 6.23977 9.64453 7.50977 9.64453C10.9598 9.64453 13.7598 12.2845 13.7598 15.5345C13.7598 16.8545 13.2798 18.1545 12.3998 19.1845C11.2698 20.5545 9.57977 21.3545 7.71977 21.4145L5.27977 22.8645C5.05977 22.9945 4.81977 23.0545 4.57977 23.0545ZM7.49977 11.1445C6.51977 11.1445 5.57976 11.4145 4.78976 11.9345C3.50976 12.7545 2.74977 14.0945 2.74977 15.5345C2.74977 16.9245 3.42978 18.1945 4.62978 19.0145C4.85978 19.1745 4.97977 19.4445 4.94977 19.7245L4.72977 21.4345L7.11977 20.0145C7.23977 19.9445 7.36977 19.9045 7.49977 19.9045C8.96977 19.9045 10.3598 19.2745 11.2398 18.2045C11.8998 17.4245 12.2498 16.5045 12.2498 15.5245C12.2498 13.1145 10.1198 11.1445 7.49977 11.1445Z"
    //         style={navStyle({ isActive: location.pathname === "/chat" })}
    //       />
    //     </svg>
    //   ),
    // },
    {
      id: 4,
      title: "View Profile",
      path: "/DoctorProfile",
      icon: (
        <svg
          width="24"
          height="25"
          viewBox="0 0 24 25"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M11.4599 14.7841C9.4999 14.7841 7.8999 13.1841 7.8999 11.2241C7.8999 9.26406 9.4999 7.66406 11.4599 7.66406C13.4199 7.66406 15.0199 9.26406 15.0199 11.2241C15.0199 13.1841 13.4199 14.7841 11.4599 14.7841ZM11.4599 9.17407C10.3299 9.17407 9.3999 10.0941 9.3999 11.2341C9.3999 12.3741 10.3199 13.2941 11.4599 13.2941C12.5999 13.2941 13.5199 12.3741 13.5199 11.2341C13.5199 10.0941 12.5999 9.17407 11.4599 9.17407Z"
            style={navStyle({ isActive: location.pathname === "/contacts" })}
          />
          <path
            d="M16.65 21.2535C16.24 21.2535 15.9 20.9135 15.9 20.5035C15.9 18.5835 13.91 17.0234 11.46 17.0234C9.01002 17.0234 7.02002 18.5835 7.02002 20.5035C7.02002 20.9135 6.68002 21.2535 6.27002 21.2535C5.86002 21.2535 5.52002 20.9135 5.52002 20.5035C5.52002 17.7635 8.18002 15.5234 11.46 15.5234C14.74 15.5234 17.4 17.7535 17.4 20.5035C17.4 20.9135 17.06 21.2535 16.65 21.2535Z"
            style={navStyle({ isActive: location.pathname === "/contacts" })}
          />
          <path
            d="M11.5 23.0547C5.85 23.0547 1.25 18.4547 1.25 12.8047C1.25 7.15469 5.85 2.55469 11.5 2.55469C12.89 2.55469 14.23 2.82468 15.49 3.35468C15.85 3.50468 16.03 3.90466 15.91 4.27466C15.8 4.60466 15.75 4.95469 15.75 5.30469C15.75 5.89469 15.91 6.47467 16.22 6.97467C16.38 7.25467 16.59 7.50466 16.83 7.71466C17.7 8.50466 18.99 8.75471 20 8.39471C20.37 8.25471 20.79 8.4447 20.94 8.8147C21.48 10.0847 21.75 11.4347 21.75 12.8147C21.75 18.4547 17.15 23.0547 11.5 23.0547ZM11.5 4.05469C6.68 4.05469 2.75 7.97469 2.75 12.8047C2.75 17.6347 6.68 21.5547 11.5 21.5547C16.32 21.5547 20.25 17.6347 20.25 12.8047C20.25 11.8447 20.09 10.8947 19.79 9.98468C18.41 10.2247 16.9 9.79471 15.84 8.82471C15.49 8.52471 15.18 8.15469 14.94 7.74469C14.5 7.02469 14.26 6.17469 14.26 5.30469C14.26 5.03469 14.28 4.77471 14.33 4.51471C13.42 4.20471 12.47 4.05469 11.5 4.05469Z"
            style={navStyle({ isActive: location.pathname === "/contacts" })}
          />
          <path
            d="M19 10.0547C17.82 10.0547 16.7 9.61471 15.83 8.82471C15.48 8.52471 15.17 8.15469 14.93 7.74469C14.49 7.02469 14.25 6.17469 14.25 5.30469C14.25 4.79469 14.33 4.2947 14.49 3.8147C14.71 3.1347 15.09 2.50469 15.6 1.99469C16.5 1.07469 17.71 0.554688 19.01 0.554688C20.37 0.554688 21.66 1.1347 22.54 2.1347C23.32 3.0047 23.76 4.12469 23.76 5.30469C23.76 5.68469 23.71 6.06468 23.61 6.42468C23.51 6.87468 23.32 7.3447 23.06 7.7547C22.48 8.7347 21.56 9.46469 20.48 9.80469C20.03 9.97469 19.53 10.0547 19 10.0547ZM19 2.05469C18.11 2.05469 17.28 2.40467 16.67 3.03467C16.32 3.39467 16.07 3.80466 15.92 4.27466C15.81 4.60466 15.76 4.95469 15.76 5.30469C15.76 5.89469 15.92 6.47467 16.23 6.97467C16.39 7.25467 16.6 7.50466 16.84 7.71466C17.71 8.50466 19 8.75471 20.01 8.39471C20.77 8.15471 21.39 7.65468 21.79 6.98468C21.97 6.69468 22.09 6.38471 22.16 6.07471C22.23 5.81471 22.26 5.56469 22.26 5.30469C22.26 4.50469 21.96 3.7347 21.42 3.1347C20.81 2.4447 19.93 2.05469 19 2.05469Z"
            style={navStyle({ isActive: location.pathname === "/contacts" })}
          />
          <path
            d="M20.49 6.03516H17.5C17.09 6.03516 16.75 5.69516 16.75 5.28516C16.75 4.87516 17.09 4.53516 17.5 4.53516H20.49C20.9 4.53516 21.24 4.87516 21.24 5.28516C21.24 5.69516 20.91 6.03516 20.49 6.03516Z"
            style={navStyle({ isActive: location.pathname === "/contacts" })}
          />
          <path
            d="M19 7.56421C18.59 7.56421 18.25 7.22421 18.25 6.81421V3.82422C18.25 3.41422 18.59 3.07422 19 3.07422C19.41 3.07422 19.75 3.41422 19.75 3.82422V6.81421C19.75 7.23421 19.41 7.56421 19 7.56421Z"
            style={navStyle({ isActive: location.pathname === "/contacts" })}
          />
        </svg>
      ),
    },
  ];
  function handleOPenSidebar() {
    setOpenBar((prevState) => !prevState);
  }

  return (
    <div className=" fixed flex  h-screen">
      <div className=" border border-gray-100  h-screen">
        {/* logo  */}
        <div className="m-2 flex justify-center mt-5 ">
          {/* safeli logo  */}
          <img src={logo} alt="" className=" w-9 h-9" />
        </div>

        {/* sidebarr menu items */}
        <div className=" flex flex-col mt-2 h-[90vh] justify-between">
          <div>
            {sidebarrData.map(({ id, title, icon, path }) => (
              <NavLink
                key={id}
                to={path}
                className={({ isActive }) =>
                  isActive
                    ? "text-white bg-blue-200 p-2 cursor-pointer rounded-lg flex  m-2"
                    : "p-2 cursor-pointer rounded-lg flex hover:bg-secondaryGrey500  hover:text-primary m-2"
                }
              >
                {icon}
                {openBar && <span className="ml-2 text-lg">{title}</span>}
              </NavLink>
            ))}
          </div>
          {/* support  */}
          <NavLink
            to="/loginDocter"
            onClick={() => localStorage.clear()}
            className={({ isActive }) =>
              isActive
                ? "text-white bg-custom-gradient ml-3 cursor-pointer rounded-lg flex m-2"
                : " cursor-pointer rounded-lg flex ml-3  hover:bg-secondaryGrey500 active:bg-blue-100 hover:text-primary m-2"
            }
          >
            {/* support  */}
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="size-6 mt-2 mr-2"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M5.636 5.636a9 9 0 1 0 12.728 0M12 3v9"
              />
            </svg>

            {openBar && <span className="mt-1  text-lg">Log out</span>}
          </NavLink>
        </div>
      </div>
      <div className="flex  items-center ">
        <div
          class="skewed-div w-[1px] cursor-pointer  bg-[#E2E8F0] !py-2 px-1 text-black"
          onClick={handleOPenSidebar}
        >
          {openBar ? (
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth={1.5}
              stroke="currentColor"
              className="size-5  -ml-[10px] px-0"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="M15.75 19.5 8.25 12l7.5-7.5"
              />
            </svg>
          ) : (
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              strokeWidth="1.5"
              stroke="currentColor"
              className="size-5  -ml-[10px] px-0"
            >
              <path
                strokeLinecap="round"
                strokeLinejoin="round"
                d="m8.25 4.5 7.5 7.5-7.5 7.5"
              />
            </svg>
          )}
        </div>
      </div>
    </div>
  );
}
